// brute force -----
private:
    bool prime(int n){
        int count =0 ;
        for (int i=1;i<=n;i++){
            if (n%i==0) count++;
        }
        return count==2;
    }
public:
    int countPrimes(int n) {
        if (n==0 || n==1) return 0;
        int count=0;
        for (int i=2;i<n;i++){
            if(prime(i)) count++;
        }
        return count;
    }


// Optimal -----
int countPrimes(int n) {
        vector<bool> isprime(n+1, true);
        isprime[0]=false;
        isprime[1]=false;
        for (int i=2;i*i<=n;i++){
            if (isprime[i]==true){
                for(int j=2;i*j<=n;j++){
                    isprime[i*j]=false;
                }
            }
        }
        int count=0;
        for (int i=2;i<n;i++){
            if (isprime[i]) count++;
        }
        return count;
